
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE __INT128 ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASH PPPRAGMA PPPRAGMASTRabstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_no_type_opt : empty\n| declaration_specifiers_no_typedesignation_opt : empty\n| designationexpression_opt : empty\n| expressionid_init_declarator_list_opt : empty\n| id_init_declarator_listidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list direct_id_declarator   : ID\n         direct_id_declarator   : LPAREN id_declarator RPAREN\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_id_declarator   : direct_id_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_id_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_declarator   : TYPEID\n         direct_typeid_declarator   : LPAREN typeid_declarator RPAREN\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_noparen_declarator   : TYPEID\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN\n         id_declarator  : direct_id_declarator\n         id_declarator  : pointer direct_id_declarator\n         typeid_declarator  : direct_typeid_declarator\n         typeid_declarator  : pointer direct_typeid_declarator\n         typeid_noparen_declarator  : direct_typeid_noparen_declarator\n         typeid_noparen_declarator  : pointer direct_typeid_noparen_declarator\n         translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n                                    | pppragma_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         pppragma_directive      : PPPRAGMA\n                                    | PPPRAGMA PPPRAGMASTR\n         function_definition : id_declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers id_declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n                        | pppragma_directive\n         decl_body : declaration_specifiers init_declarator_list_opt\n                      | declaration_specifiers_no_type id_init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers_no_type  : type_qualifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : storage_class_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : function_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers  : declaration_specifiers type_qualifier\n         declaration_specifiers  : declaration_specifiers storage_class_specifier\n         declaration_specifiers  : declaration_specifiers function_specifier\n         declaration_specifiers  : declaration_specifiers type_specifier_no_typeid\n         declaration_specifiers  : type_specifier\n         declaration_specifiers  : declaration_specifiers_no_type type_specifier\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier_no_typeid  : VOID\n                                      | _BOOL\n                                      | CHAR\n                                      | SHORT\n                                      | INT\n                                      | LONG\n                                      | FLOAT\n                                      | DOUBLE\n                                      | _COMPLEX\n                                      | SIGNED\n                                      | UNSIGNED\n                                      | __INT128\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n                            | type_specifier_no_typeid\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         id_init_declarator_list    : id_init_declarator\n                                       | id_init_declarator_list COMMA init_declarator\n         id_init_declarator : id_declarator\n                               | id_declarator EQUALS initializer\n         specifier_qualifier_list    : specifier_qualifier_list type_specifier_no_typeid\n         specifier_qualifier_list    : specifier_qualifier_list type_qualifier\n         specifier_qualifier_list  : type_specifier\n         specifier_qualifier_list  : type_qualifier_list type_specifier\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : SEMI\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : id_declarator\n                        | typeid_declarator\n         pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers id_declarator\n                                    | declaration_specifiers typeid_noparen_declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON statement  labeled_statement : CASE constant_expression COLON statement  labeled_statement : DEFAULT COLON statement  selection_statement : IF LPAREN expression RPAREN statement  selection_statement : IF LPAREN expression RPAREN statement ELSE statement  selection_statement : SWITCH LPAREN expression RPAREN statement  iteration_statement : WHILE LPAREN expression RPAREN statement  iteration_statement : DO statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN\n         offsetof_member_designator : identifier\n                                         | offsetof_member_designator PERIOD identifier\n                                         | offsetof_member_designator LBRACKET expression RBRACKET\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {'VOID':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,32,33,34,35,36,37,39,40,41,42,44,45,47,48,49,50,51,53,54,55,56,57,60,61,63,64,65,67,68,69,70,71,72,73,74,78,80,83,87,91,92,96,101,102,103,104,105,113,117,120,121,122,123,124,125,126,127,128,129,130,136,142,170,184,185,186,198,199,200,203,205,212,214,215,216,217,219,222,228,229,230,231,232,233,234,240,245,254,273,282,283,284,287,289,292,323,327,332,333,335,336,342,345,347,350,351,354,356,357,392,412,413,426,427,431,436,473,494,495,497,515,516,519,520,],[6,-303,-102,-115,-113,-99,-97,-52,-95,-114,-96,-64,-60,-100,-91,-66,6,-94,-109,-104,-65,-93,-110,6,-215,-107,-111,6,-63,-116,6,-29,-105,-62,-101,-67,-112,-106,-303,-108,-303,-103,-117,-68,-98,-85,-10,-9,6,-53,6,-82,6,6,-61,-131,-301,-130,6,-147,-146,-160,-88,-90,6,-87,-89,-92,-81,-84,-86,-69,-30,6,6,-70,6,-83,6,6,-128,-140,-137,6,6,6,-161,6,6,-36,-35,6,6,-73,-76,-72,-74,6,-78,-193,-192,-77,-194,-75,6,6,-129,-132,-138,-302,-126,-127,-148,-71,6,-31,6,6,6,-34,6,6,6,-212,-211,6,-209,-195,-208,-196,-134,-133,-139,-150,-149,6,-33,-32,-207,-210,-199,-197,-198,-203,-202,-200,-204,-201,-206,-205,]),'LBRACKET':([2,3,5,6,7,8,9,10,11,15,16,19,20,21,24,25,29,30,31,32,35,37,39,41,44,45,48,50,51,54,61,69,70,71,73,74,76,77,78,79,80,83,85,88,91,92,96,105,113,115,125,136,137,140,147,150,151,152,153,154,155,158,159,167,169,172,174,175,177,178,184,185,186,189,190,193,196,226,230,231,233,234,240,245,247,256,272,275,276,278,282,289,292,315,320,321,350,351,356,357,364,365,368,373,377,378,379,380,383,388,391,392,412,413,414,415,421,422,440,441,445,447,449,452,453,459,465,466,467,468,469,477,478,479,484,485,488,489,499,502,503,504,505,510,512,517,],[-102,-115,-113,-99,-97,59,-95,-114,-96,-100,-91,-94,-109,-104,-93,-110,-215,-107,-303,-111,-116,-29,-105,-101,-112,-106,-108,-103,-117,-98,59,-131,-301,-130,-147,-146,-28,-158,-160,-27,-88,-90,141,-37,-87,-89,-92,-30,195,-288,-128,-161,-159,141,-292,-280,-295,-299,-296,-293,-278,-279,280,-291,-265,-297,-289,-277,-294,-290,-36,-35,195,195,322,-45,326,-288,-129,-132,-302,-126,-127,-148,-38,370,-300,-298,-274,-273,-31,-34,195,195,322,326,-134,-133,-150,-149,-44,-43,-177,370,-272,-271,-270,-269,-268,-281,195,195,-33,-32,-191,-185,-187,-189,-39,-42,-180,370,-178,-266,-267,370,-51,-50,-186,-188,-190,-41,-40,-179,501,-283,-46,-49,-282,370,-275,-48,-47,-284,-276,-285,]),'WCHAR_CONST':([3,35,51,53,59,70,76,78,79,101,104,106,107,108,121,136,141,144,145,148,156,157,163,164,166,168,170,171,173,181,182,183,195,199,200,203,204,205,211,212,214,215,216,217,219,221,222,225,233,235,246,249,250,251,256,260,261,262,263,264,265,266,267,268,269,270,271,273,280,281,284,287,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,322,325,326,332,333,335,336,337,338,339,342,344,345,347,348,349,355,361,362,363,366,370,372,374,389,416,417,418,424,426,427,429,431,433,436,447,450,454,456,459,460,462,463,464,470,472,473,474,475,476,480,481,493,494,495,497,501,502,506,509,514,515,516,518,519,520,],[-115,-116,-117,-68,-303,-301,-28,-160,-27,-81,-69,153,-28,-303,153,-161,-303,153,153,-264,153,-262,153,-261,153,-260,153,153,-259,-263,153,153,153,-73,-76,-72,153,-74,153,153,-78,-193,-192,-77,-194,153,-75,-260,-302,153,153,153,-28,-303,-303,-221,-224,-222,-218,-219,-223,-225,153,-227,-228,-220,-226,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,-303,-260,153,-212,-211,153,-209,153,153,153,-195,153,-208,-196,153,153,153,-260,153,153,-12,153,153,-11,153,153,-28,-303,-260,-207,-210,153,-199,153,-197,-303,-176,153,153,-303,153,-260,153,153,153,153,-198,153,153,153,153,-11,153,-203,-202,-200,153,-303,153,153,153,-204,-201,153,-206,-205,]),'FLOAT_CONST':([3,35,51,53,59,70,76,78,79,101,104,106,107,108,121,136,141,144,145,148,156,157,163,164,166,168,170,171,173,181,182,183,195,199,200,203,204,205,211,212,214,215,216,217,219,221,222,225,233,235,246,249,250,251,256,260,261,262,263,264,265,266,267,268,269,270,271,273,280,281,284,287,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,322,325,326,332,333,335,336,337,338,339,342,344,345,347,348,349,355,361,362,363,366,370,372,374,389,416,417,418,424,426,427,429,431,433,436,447,450,454,456,459,460,462,463,464,470,472,473,474,475,476,480,481,493,494,495,497,501,502,506,509,514,515,516,518,519,520,],[-115,-116,-117,-68,-303,-301,-28,-160,-27,-81,-69,154,-28,-303,154,-161,-303,154,154,-264,154,-262,154,-261,154,-260,154,154,-259,-263,154,154,154,-73,-76,-72,154,-74,154,154,-78,-193,-192,-77,-194,154,-75,-260,-302,154,154,154,-28,-303,-303,-221,-224,-222,-218,-219,-223,-225,154,-227,-228,-220,-226,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,-303,-260,154,-212,-211,154,-209,154,154,154,-195,154,-208,-196,154,154,154,-260,154,154,-12,154,154,-11,154,154,-28,-303,-260,-207,-210,154,-199,154,-197,-303,-176,154,154,-303,154,-260,154,154,154,154,-198,154,154,154,154,-11,154,-203,-202,-200,154,-303,154,154,154,-204,-201,154,-206,-205,]),'MINUS':([3,35,51,53,59,70,76,78,79,101,104,106,107,108,115,121,136,141,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,161,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,181,182,183,195,199,200,203,204,205,211,212,214,215,216,217,219,221,222,225,226,233,235,246,249,250,251,256,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,280,281,284,285,286,287,288,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,322,325,326,332,333,335,336,337,338,339,342,344,345,347,348,349,355,361,362,363,366,370,372,374,377,378,379,380,383,388,389,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,410,411,416,417,418,424,426,427,429,431,433,436,447,450,451,452,453,454,456,458,459,460,462,463,464,470,472,473,474,475,476,480,481,493,494,495,497,499,501,502,503,506,509,512,514,515,516,518,519,520,],[-115,-116,-117,-68,-303,-301,-28,-160,-27,-81,-69,157,-28,-303,-288,157,-161,-303,157,157,-292,-264,-251,-280,-295,-299,-296,-293,-278,157,-262,-279,-253,-232,157,-261,157,-291,-260,-265,157,157,-297,-259,-289,-277,297,-294,-290,-263,157,157,157,-73,-76,-72,157,-74,157,157,-78,-193,-192,-77,-194,157,-75,-260,-288,-302,157,157,157,-28,-303,-303,-221,-224,-222,-218,-219,-223,-225,157,-227,-228,-220,-226,-300,157,-257,-298,-274,-273,157,157,157,-251,-256,157,-254,-255,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,-303,-260,157,-212,-211,157,-209,157,157,157,-195,157,-208,-196,157,157,157,-260,157,157,-12,157,157,-11,-272,-271,-270,-269,-268,-281,157,297,297,297,-237,297,297,297,-236,297,297,-234,-233,297,297,297,297,297,-235,157,-28,-303,-260,-207,-210,157,-199,157,-197,-303,-176,-258,-266,-267,157,157,-252,-303,157,-260,157,157,157,157,-198,157,157,157,157,-11,157,-203,-202,-200,-282,157,-303,-275,157,157,-276,157,-204,-201,157,-206,-205,]),'RPAREN':([2,3,5,6,7,8,9,10,11,15,16,19,20,21,24,25,29,30,31,32,35,37,39,41,44,45,48,50,51,54,58,60,61,69,71,73,74,76,77,78,79,80,83,85,88,91,92,96,105,109,110,111,112,113,114,115,116,118,125,136,137,138,140,142,147,149,150,151,152,153,154,155,158,159,161,167,169,172,174,175,176,177,178,180,184,185,186,187,188,189,190,191,192,193,194,196,208,224,230,231,233,234,240,245,247,252,253,272,274,275,276,278,281,282,285,286,288,289,290,291,292,293,315,316,317,318,319,320,321,323,327,328,329,330,343,350,351,356,357,364,365,375,376,377,378,379,380,382,383,384,386,387,388,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,410,411,412,413,414,415,419,420,421,422,425,430,432,434,437,440,441,451,452,453,458,465,466,467,468,469,477,478,483,484,485,487,488,489,493,496,499,503,504,505,506,507,510,512,513,517,],[-102,-115,-113,-99,-97,-52,-95,-114,-96,-100,-91,-94,-109,-104,-93,-110,-215,-107,-303,-111,-116,-29,-105,-101,-112,-106,-108,-103,-117,-98,105,-303,-53,-131,-130,-147,-146,-28,-158,-160,-27,-88,-90,-54,-37,-87,-89,-92,-30,184,-17,185,-164,-303,-18,-288,-162,-169,-128,-161,-159,247,-55,-303,-292,-251,-280,-295,-299,-296,-293,-278,-279,-253,-232,-291,-265,-297,-289,-277,-230,-294,-290,-216,-36,-35,-303,-168,-2,-182,-56,-166,-1,-45,-167,-184,-14,-213,-129,-132,-302,-126,-127,-148,-38,364,365,-300,-257,-298,-274,-273,383,-31,-251,-256,-254,-34,388,389,-303,-255,-182,-23,-24,414,415,-57,-183,-303,-303,-170,-163,-165,-13,-134,-133,-150,-149,-44,-43,-217,451,-272,-271,-270,-269,-286,-268,453,456,457,-281,-181,-182,-303,-238,-250,-239,-237,-241,-245,-240,-236,-243,-248,-234,-233,-242,-249,-244,-246,-247,-235,-33,-32,-191,-185,465,466,-187,-189,469,-214,472,474,476,-39,-42,-258,-266,-267,-252,-51,-50,-186,-188,-190,-41,-40,-287,499,-283,-231,-46,-49,-303,508,-282,-275,-48,-47,-303,514,-284,-276,518,-285,]),'LONG':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,32,33,34,35,36,37,39,40,41,42,44,45,47,48,49,50,51,53,54,55,56,57,60,61,63,64,65,67,68,69,70,71,72,73,74,78,80,83,87,91,92,96,101,102,103,104,105,113,117,120,121,122,123,124,125,126,127,128,129,130,136,142,170,184,185,186,198,199,200,203,205,212,214,215,216,217,219,222,228,229,230,231,232,233,234,240,245,254,273,282,283,284,287,289,292,323,327,332,333,335,336,342,345,347,350,351,354,356,357,392,412,413,426,427,431,436,473,494,495,497,515,516,519,520,],[21,-303,-102,-115,-113,-99,-97,-52,-95,-114,-96,-64,-60,-100,-91,-66,21,-94,-109,-104,-65,-93,-110,21,-215,-107,-111,21,-63,-116,21,-29,-105,-62,-101,-67,-112,-106,-303,-108,-303,-103,-117,-68,-98,-85,-10,-9,21,-53,21,-82,21,21,-61,-131,-301,-130,21,-147,-146,-160,-88,-90,21,-87,-89,-92,-81,-84,-86,-69,-30,21,21,-70,21,-83,21,21,-128,-140,-137,21,21,21,-161,21,21,-36,-35,21,21,-73,-76,-72,-74,21,-78,-193,-192,-77,-194,-75,21,21,-129,-132,-138,-302,-126,-127,-148,-71,21,-31,21,21,21,-34,21,21,21,-212,-211,21,-209,-195,-208,-196,-134,-133,-139,-150,-149,21,-33,-32,-207,-210,-199,-197,-198,-203,-202,-200,-204,-201,-206,-205,]),'PLUS':([3,35,51,53,59,70,76,78,79,101,104,106,107,108,115,121,136,141,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,161,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,181,182,183,195,199,200,203,204,205,211,212,214,215,216,217,219,221,222,225,226,233,235,246,249,250,251,256,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,280,281,284,285,286,287,288,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,322,325,326,332,333,335,336,337,338,339,342,344,345,347,348,349,355,361,362,363,366,370,372,374,377,378,379,380,383,388,389,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,410,411,416,417,418,424,426,427,429,431,433,436,447,450,451,452,453,454,456,458,459,460,462,463,464,470,472,473,474,475,476,480,481,493,494,495,497,499,501,502,503,506,509,512,514,515,516,518,519,520,],[-115,-116,-117,-68,-303,-301,-28,-160,-27,-81,-69,164,-28,-303,-288,164,-161,-303,164,164,-292,-264,-251,-280,-295,-299,-296,-293,-278,164,-262,-279,-253,-232,164,-261,164,-291,-260,-265,164,164,-297,-259,-289,-277,301,-294,-290,-263,164,164,164,-73,-76,-72,164,-74,164,164,-78,-193,-192,-77,-194,164,-75,-260,-288,-302,164,164,164,-28,-303,-303,-221,-224,-222,-218,-219,-223,-225,164,-227,-228,-220,-226,-300,164,-257,-298,-274,-273,164,164,164,-251,-256,164,-254,-255,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,-303,-260,164,-212,-211,164,-209,164,164,164,-195,164,-208,-196,164,164,164,-260,164,164,-12,164,164,-11,-272,-271,-270,-269,-268,-281,164,301,301,301,-237,301,301,301,-236,301,301,-234,-233,301,301,301,301,301,-235,164,-28,-303,-260,-207,-210,164,-199,164,-197,-303,-176,-258,-266,-267,164,164,-252,-303,164,-260,164,164,164,164,-198,164,164,164,164,-11,164,-203,-202,-200,-282,164,-303,-275,164,164,-276,164,-204,-201,164,-206,-205,]),'ELLIPSIS':([198,],[329,]),'GT':([115,147,149,150,151,152,153,154,155,158,159,161,167,169,172,174,175,176,177,178,226,233,272,274,275,276,278,285,286,288,293,377,378,379,380,383,388,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,410,411,451,452,453,458,499,503,512,],[-288,-292,-251,-280,-295,-299,-296,-293,-278,-279,-253,-232,-291,-265,-297,-289,-277,302,-294,-290,-288,-302,-300,-257,-298,-274,-273,-251,-256,-254,-255,-272,-271,-270,-269,-268,-281,-238,302,-239,-237,-241,302,-240,-236,-243,302,-234,-233,-242,302,302,302,302,-235,-258,-266,-267,-252,-282,-275,-276,]),'GOTO':([53,70,101,104,121,199,200,203,205,212,214,215,216,217,219,221,222,233,332,333,336,338,342,345,347,348,426,427,431,433,436,472,473,474,476,494,495,497,509,514,515,516,518,519,520,],[-68,-301,-81,-69,201,-73,-76,-72,-74,201,-78,-193,-192,-77,-194,201,-75,-302,-212,-211,-209,201,-195,-208,-196,201,-207,-210,-199,201,-197,201,-198,201,201,-203,-202,-200,201,201,-204,-201,201,-206,-205,]),'ENUM':([0,1,3,7,8,9,11,12,14,17,18,19,23,24,26,34,35,36,37,40,42,47,49,51,53,54,55,56,57,60,61,64,65,67,68,70,72,78,87,101,102,103,104,105,117,120,121,122,123,124,126,127,128,129,136,142,170,184,185,186,198,199,200,203,205,212,214,215,216,217,219,222,228,229,232,233,254,273,282,283,284,287,289,323,327,332,333,335,336,342,345,347,354,392,412,413,426,427,431,436,473,494,495,497,515,516,519,520,],[28,-303,-115,-97,-52,-95,-96,-64,-60,-66,28,-94,-65,-93,28,-63,-116,28,-29,-62,-67,-303,-303,-117,-68,-98,-85,-10,-9,28,-53,-82,28,28,-61,-301,28,-160,28,-81,-84,-86,-69,-30,28,-70,28,-83,28,28,-140,-137,28,28,-161,28,28,-36,-35,28,28,-73,-76,-72,-74,28,-78,-193,-192,-77,-194,-75,28,28,-138,-302,-71,28,-31,28,28,28,-34,28,28,-212,-211,28,-209,-195,-208,-196,-139,28,-33,-32,-207,-210,-199,-197,-198,-203,-202,-200,-204,-201,-206,-205,]),'PERIOD':([70,115,147,150,151,152,153,154,155,158,159,167,169,172,174,175,177,178,226,233,256,272,275,276,278,368,373,377,378,379,380,383,388,445,447,449,452,453,459,479,484,485,499,502,503,510,512,517,],[-301,-288,-292,-280,-295,-299,-296,-293,-278,-279,279,-291,-265,-297,-289,-277,-294,-290,-288,-302,369,-300,-298,-274,-273,-177,369,-272,-271,-270,-269,-268,-281,-180,369,-178,-266,-267,369,-179,500,-283,-282,369,-275,-284,-276,-285,]),'GE':([115,147,149,150,151,152,153,154,155,158,159,161,167,169,172,174,175,176,177,178,226,233,272,274,275,276,278,285,286,288,293,377,378,379,380,383,388,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,410,411,451,452,453,458,499,503,512,],[-288,-292,-251,-280,-295,-299,-296,-293,-278,-279,-253,-232,-291,-265,-297,-289,-277,306,-294,-290,-288,-302,-300,-257,-298,-274,-273,-251,-256,-254,-255,-272,-271,-270,-269,-268,-281,-238,306,-239,-237,-241,306,-240,-236,-243,306,-234,-233,-242,306,306,306,306,-235,-258,-266,-267,-252,-282,-275,-276,]),'INT_CONST_DEC':([3,35,51,53,59,70,76,78,79,101,104,106,107,108,121,136,141,144,145,148,156,157,163,164,166,168,170,171,173,181,182,183,195,199,200,203,204,205,211,212,214,215,216,217,219,221,222,225,233,235,246,249,250,251,256,260,261,262,263,264,265,266,267,268,269,270,271,273,280,281,284,287,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,322,325,326,332,333,335,336,337,338,339,342,344,345,347,348,349,355,361,362,363,366,370,372,374,389,416,417,418,424,426,427,429,431,433,436,447,450,454,456,459,460,462,463,464,470,472,473,474,475,476,480,481,493,494,495,497,501,502,506,509,514,515,516,518,519,520,],[-115,-116,-117,-68,-303,-301,-28,-160,-27,-81,-69,174,-28,-303,174,-161,-303,174,174,-264,174,-262,174,-261,174,-260,174,174,-259,-263,174,174,174,-73,-76,-72,174,-74,174,174,-78,-193,-192,-77,-194,174,-75,-260,-302,174,174,174,-28,-303,-303,-221,-224,-222,-218,-219,-223,-225,174,-227,-228,-220,-226,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,-303,-260,174,-212,-211,174,-209,174,174,174,-195,174,-208,-196,174,174,174,-260,174,174,-12,174,174,-11,174,174,-28,-303,-260,-207,-210,174,-199,174,-197,-303,-176,174,174,-303,174,-260,174,174,174,174,-198,174,174,174,174,-11,174,-203,-202,-200,174,-303,174,174,174,-204,-201,174,-206,-205,]),'ARROW':([115,147,150,151,152,153,154,155,158,159,167,169,172,174,175,177,178,226,233,272,275,276,278,377,378,379,380,383,388,452,453,499,503,512,],[-288,-292,-280,-295,-299,-296,-293,-278,-279,277,-291,-265,-297,-289,-277,-294,-290,-288,-302,-300,-298,-274,-273,-272,-271,-270,-269,-268,-281,-266,-267,-282,-275,-276,]),'CHAR':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,32,33,34,35,36,37,39,40,41,42,44,45,47,48,49,50,51,53,54,55,56,57,60,61,63,64,65,67,68,69,70,71,72,73,74,78,80,83,87,91,92,96,101,102,103,104,105,113,117,120,121,122,123,124,125,126,127,128,129,130,136,142,170,184,185,186,198,199,200,203,205,212,214,215,216,217,219,222,228,229,230,231,232,233,234,240,245,254,273,282,283,284,287,289,292,323,327,332,333,335,336,342,345,347,350,351,354,356,357,392,412,413,426,427,431,436,473,494,495,497,515,516,519,520,],[41,-303,-102,-115,-113,-99,-97,-52,-95,-114,-96,-64,-60,-100,-91,-66,41,-94,-109,-104,-65,-93,-110,41,-215,-107,-111,41,-63,-116,41,-29,-105,-62,-101,-67,-112,-106,-303,-108,-303,-103,-117,-68,-98,-85,-10,-9,41,-53,41,-82,41,41,-61,-131,-301,-130,41,-147,-146,-160,-88,-90,41,-87,-89,-92,-81,-84,-86,-69,-30,41,41,-70,41,-83,41,41,-128,-140,-137,41,41,41,-161,41,41,-36,-35,41,41,-73,-76,-72,-74,41,-78,-193,-192,-77,-194,-75,41,41,-129,-132,-138,-302,-126,-127,-148,-71,41,-31,41,41,41,-34,41,41,41,-212,-211,41,-209,-195,-208,-196,-134,-133,-139,-150,-149,41,-33,-32,-207,-210,-199,-197,-198,-203,-202,-200,-204,-201,-206,-205,]),'HEX_FLOAT_CONST':([3,35,51,53,59,70,76,78,79,101,104,106,107,108,121,136,141,144,145,148,156,157,163,164,166,168,170,171,173,181,182,183,195,199,200,203,204,205,211,212,214,215,216,217,219,221,222,225,233,235,246,249,250,251,256,260,261,262,263,264,265,266,267,268,269,270,271,273,280,281,284,287,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,322,325,326,332,333,335,336,337,338,339,342,344,345,347,348,349,355,361,362,363,366,370,372,374,389,416,417,418,424,426,427,429,431,433,436,447,450,454,456,459,460,462,463,464,470,472,473,474,475,476,480,481,493,494,495,497,501,502,506,509,514,515,516,518,519,520,],[-115,-116,-117,-68,-303,-301,-28,-160,-27,-81,-69,177,-28,-303,177,-161,-303,177,177,-264,177,-262,177,-261,177,-260,177,177,-259,-263,177,177,177,-73,-76,-72,177,-74,177,177,-78,-193,-192,-77,-194,177,-75,-260,-302,177,177,177,-28,-303,-303,-221,-224,-222,-218,-219,-223,-225,177,-227,-228,-220,-226,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,-303,-260,177,-212,-211,177,-209,177,177,177,-195,177,-208,-196,177,177,177,-260,177,177,-12,177,177,-11,177,177,-28,-303,-260,-207,-210,177,-199,177,-197,-303,-176,177,177,-303,177,-260,177,177,177,177,-198,177,177,177,177,-11,177,-203,-202,-200,177,-303,177,177,177,-204,-201,177,-206,-205,]),'DOUBLE':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,32,33,34,35,36,37,39,40,41,42,44,45,47,48,49,50,51,53,54,55,56,57,60,61,63,64,65,67,68,69,70,71,72,73,74,78,80,83,87,91,92,96,101,102,103,104,105,113,117,120,121,122,123,124,125,126,127,128,129,130,136,142,170,184,185,186,198,199,200,203,205,212,214,215,216,217,219,222,228,229,230,231,232,233,234,240,245,254,273,282,283,284,287,289,292,323,327,332,333,335,336,342,345,347,350,351,354,356,357,392,412,413,426,427,431,436,473,494,495,497,515,516,519,520,],[45,-303,-102,-115,-113,-99,-97,-52,-95,-114,-96,-64,-60,-100,-91,-66,45,-94,-109,-104,-65,-93,-110,45,-215,-107,-111,45,-63,-116,45,-29,-105,-62,-101,-67,-112,-106,-303,-108,-303,-103,-117,-68,-98,-85,-10,-9,45,-53,45,-82,45,45,-61,-131,-301,-130,45,-147,-146,-160,-88,-90,45,-87,-89,-92,-81,-84,-86,-69,-30,45,45,-70,45,-83,45,45,-128,-140,-137,45,45,45,-161,45,45,-36,-35,45,45,-73,-76,-72,-74,45,-78,-193,-192,-77,-194,-75,45,45,-129,-132,-138,-302,-126,-127,-148,-71,45,-31,45,45,45,-34,45,45,45,-212,-211,45,-209,-195,-208,-196,-134,-133,-139,-150,-149,45,-33,-32,-207,-210,-199,-197,-198,-203,-202,-200,-204,-201,-206,-205,]),'MINUSEQUAL':([115,147,149,150,151,152,153,154,155,158,159,167,169,172,174,175,177,178,226,233,272,274,275,276,278,285,286,288,293,377,378,379,380,383,388,451,452,453,458,499,503,512,],[-288,-292,261,-280,-295,-299,-296,-293,-278,-279,-253,-291,-265,-297,-289,-277,-294,-290,-288,-302,-300,-257,-298,-274,-273,-251,-256,-254,-255,-272,-271,-270,-269,-268,-281,-258,-266,-267,-252,-282,-275,-276,]),'INT_CONST_OCT':([3,35,51,53,59,70,76,78,79,101,104,106,107,108,121,136,141,144,145,148,156,157,163,164,166,168,170,171,173,181,182,183,195,199,200,203,204,205,211,212,214,215,216,217,219,221,222,225,233,235,246,249,250,251,256,260,261,262,263,264,265,266,267,268,269,270,271,273,280,281,284,287,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,322,325,326,332,333,335,336,337,338,339,342,344,345,347,348,349,355,361,362,363,366,370,372,374,389,416,417,418,424,426,427,429,431,433,436,447,450,454,456,459,460,462,463,464,470,472,473,474,475,476,480,481,493,494,495,497,501,502,506,509,514,515,516,518,519,520,],[-115,-116,-117,-68,-303,-301,-28,-160,-27,-81,-69,178,-28,-303,178,-161,-303,178,178,-264,178,-262,178,-261,178,-260,178,178,-259,-263,178,178,178,-73,-76,-72,178,-74,178,178,-78,-193,-192,-77,-194,178,-75,-260,-302,178,178,178,-28,-303,-303,-221,-224,-222,-218,-219,-223,-225,178,-227,-228,-220,-226,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,-303,-260,178,-212,-211,178,-209,178,178,178,-195,178,-208,-196,178,178,178,-260,178,178,-12,178,178,-11,178,178,-28,-303,-260,-207,-210,178,-199,178,-197,-303,-176,178,178,-303,178,-260,178,178,178,178,-198,178,178,178,178,-11,178,-203,-202,-200,178,-303,178,178,178,-204,-201,178,-206,-205,]),'TIMESEQUAL':([115,147,149,150,151,152,153,154,155,158,159,167,169,172,174,175,177,178,226,233,272,274,275,276,278,285,286,288,293,377,378,379,380,383,388,451,452,453,458,499,503,512,],[-288,-292,270,-280,-295,-299,-296,-293,-278,-279,-253,-291,-265,-297,-289,-277,-294,-290,-288,-302,-300,-257,-298,-274,-273,-251,-256,-254,-255,-272,-271,-270,-269,-268,-281,-258,-266,-267,-252,-282,-275,-276,]),'OR':([115,147,149,150,151,152,153,154,155,158,159,161,167,169,172,174,175,176,177,178,226,233,272,274,275,276,278,285,286,288,293,377,378,379,380,383,388,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,410,411,451,452,453,458,499,503,512,],[-288,-292,-251,-280,-295,-299,-296,-293,-278,-279,-253,-232,-291,-265,-297,-289,-277,311,-294,-290,-288,-302,-300,-257,-298,-274,-273,-251,-256,-254,-255,-272,-271,-270,-269,-268,-281,-238,311,-239,-237,-241,-245,-240,-236,-243,-248,-234,-233,-242,311,-244,-246,-247,-235,-258,-266,-267,-252,-282,-275,-276,]),'SHORT':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,32,33,34,35,36,37,39,40,41,42,44,45,47,48,49,50,51,53,54,55,56,57,60,61,63,64,65,67,68,69,70,71,72,73,74,78,80,83,87,91,92,96,101,102,103,104,105,113,117,120,121,122,123,124,125,126,127,128,129,130,136,142,170,184,185,186,198,199,200,203,205,212,214,215,216,217,219,222,228,229,230,231,232,233,234,240,245,254,273,282,283,284,287,289,292,323,327,332,333,335,336,342,345,347,350,351,354,356,357,392,412,413,426,427,431,436,473,494,495,497,515,516,519,520,],[2,-303,-102,-115,-113,-99,-97,-52,-95,-114,-96,-64,-60,-100,-91,-66,2,-94,-109,-104,-65,-93,-110,2,-215,-107,-111,2,-63,-116,2,-29,-105,-62,-101,-67,-112,-106,-303,-108,-303,-103,-117,-68,-98,-85,-10,-9,2,-53,2,-82,2,2,-61,-131,-301,-130,2,-147,-146,-160,-88,-90,2,-87,-89,-92,-81,-84,-86,-69,-30,2,2,-70,2,-83,2,2,-128,-140,-137,2,2,2,-161,2,2,-36,-35,2,2,-73,-76,-72,-74,2,-78,-193,-192,-77,-194,-75,2,2,-129,-132,-138,-302,-126,-127,-148,-71,2,-31,2,2,2,-34,2,2,2,-212,-211,2,-209,-195,-208,-196,-134,-133,-139,-150,-149,2,-33,-32,-207,-210,-199,-197,-198,-203,-202,-200,-204,-201,-206,-205,]),'RETURN':([53,70,101,104,121,199,200,203,205,212,214,215,216,217,219,221,222,233,332,333,336,338,342,345,347,348,426,427,431,433,436,472,473,474,476,494,495,497,509,514,515,516,518,519,520,],[-68,-301,-81,-69,204,-73,-76,-72,-74,204,-78,-193,-192,-77,-194,204,-75,-302,-212,-211,-209,204,-195,-208,-196,204,-207,-210,-199,204,-197,204,-198,204,204,-203,-202,-200,204,204,-204,-201,204,-206,-205,]),'RSHIFTEQUAL':([115,147,149,150,151,152,153,154,155,158,159,167,169,172,174,175,177,178,226,233,272,274,275,276,278,285,286,288,293,377,378,379,380,383,388,451,452,453,458,499,503,512,],[-288,-292,271,-280,-295,-299,-296,-293,-278,-279,-253,-291,-265,-297,-289,-277,-294,-290,-288,-302,-300,-257,-298,-274,-273,-251,-256,-254,-255,-272,-271,-270,-269,-268,-281,-258,-266,-267,-252,-282,-275,-276,]),'RESTRICT':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,31,32,33,34,35,37,39,40,41,42,44,45,47,48,49,50,51,53,54,59,60,61,63,64,67,68,69,70,71,72,73,74,76,78,80,83,87,91,92,96,101,104,105,107,108,113,120,121,122,123,124,125,126,127,128,129,130,136,141,142,170,184,185,186,198,199,200,203,205,212,214,215,216,217,219,222,228,229,230,231,232,233,234,240,245,250,251,254,273,282,283,284,287,289,292,322,323,327,332,333,335,336,342,345,347,350,351,354,356,357,392,412,413,417,418,426,427,431,436,473,494,495,497,515,516,519,520,],[35,35,-102,-115,-113,-99,-97,-52,-95,-114,-96,-64,-60,-100,-91,-66,35,-94,-109,-104,-65,-93,-110,35,-215,-107,35,-111,35,-63,-116,-29,-105,-62,-101,-67,-112,-106,35,-108,35,-103,-117,-68,-98,35,35,-53,35,-82,35,-61,-131,-301,-130,35,-147,-146,35,-160,-88,-90,35,-87,-89,-92,-81,-69,-30,35,35,35,-70,35,-83,35,35,-128,-140,-137,35,35,35,-161,35,35,35,-36,-35,35,35,-73,-76,-72,-74,35,-78,-193,-192,-77,-194,-75,35,35,-129,-132,-138,-302,-126,-127,-148,35,35,-71,35,-31,35,35,35,-34,35,35,35,35,-212,-211,35,-209,-195,-208,-196,-134,-133,-139,-150,-149,35,-33,-32,35,35,-207,-210,-199,-197,-198,-203,-202,-200,-204,-201,-206,-205,]),'STATIC':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,32,33,34,35,37,39,40,41,42,44,45,47,48,49,50,51,53,54,59,60,61,63,64,67,68,69,70,71,73,74,78,80,83,87,91,92,96,101,104,105,107,113,120,121,122,136,141,142,184,185,186,198,199,200,203,205,212,214,215,216,217,219,222,231,233,245,250,254,282,289,322,323,327,332,333,335,336,342,345,347,350,351,356,357,392,412,413,417,426,427,431,436,473,494,495,497,515,516,519,520,],[9,9,-102,-115,-113,-99,-97,-52,-95,-114,-96,-64,-60,-100,-91,-66,9,-94,-109,-104,-65,-93,-110,9,-215,-107,-111,9,-63,-116,-29,-105,-62,-101,-67,-112,-106,9,-108,9,-103,-117,-68,-98,108,9,-53,9,-82,9,-61,-131,-301,-130,-147,-146,-160,-88,-90,9,-87,-89,-92,-81,-69,-30,182,9,-70,9,-83,-161,251,9,-36,-35,9,9,-73,-76,-72,-74,9,-78,-193,-192,-77,-194,-75,-132,-302,-148,362,-71,-31,-34,418,9,9,-212,-211,9,-209,-195,-208,-196,-134,-133,-150,-149,9,-33,-32,463,-207,-210,-199,-197,-198,-203,-202,-200,-204,-201,-206,-205,]),'SIZEOF':([3,35,51,53,59,70,76,78,79,101,104,106,107,108,121,136,141,144,145,148,156,157,163,164,166,168,170,171,173,181,182,183,195,199,200,203,204,205,211,212,214,215,216,217,219,221,222,225,233,235,246,249,250,251,256,260,261,262,263,264,265,266,267,268,269,270,271,273,280,281,284,287,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,322,325,326,332,333,335,336,337,338,339,342,344,345,347,348,349,355,361,362,363,366,370,372,374,389,416,417,418,424,426,427,429,431,433,436,447,450,454,456,459,460,462,463,464,470,472,473,474,475,476,480,481,493,494,495,497,501,502,506,509,514,515,516,518,519,520,],[-115,-116,-117,-68,-303,-301,-28,-160,-27,-81,-69,156,-28,-303,156,-161,-303,156,156,-264,156,-262,156,-261,156,-260,156,156,-259,-263,156,156,156,-73,-76,-72,156,-74,156,156,-78,-193,-192,-77,-194,156,-75,-260,-302,156,156,156,-28,-303,-303,-221,-224,-222,-218,-219,-223,-225,156,-227,-228,-220,-226,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,-303,-260,156,-212,-211,156,-209,156,156,156,-195,156,-208,-196,156,156,156,-260,156,156,-12,156,156,-11,156,156,-28,-303,-260,-207,-210,156,-199,156,-197,-303,-176,156,156,-303,156,-260,156,156,156,156,-198,156,156,156,156,-11,156,-203,-202,-200,156,-303,156,156,156,-204,-201,156,-206,-205,]),'UNSIGNED':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,32,33,34,35,36,37,39,40,41,42,44,45,47,48,49,50,51,53,54,55,56,57,60,61,63,64,65,67,68,69,70,71,72,73,74,78,80,83,87,91,92,96,101,102,103,104,105,113,117,120,121,122,123,124,125,126,127,128,129,130,136,142,170,184,185,186,198,199,200,203,205,212,214,215,216,217,219,222,228,229,230,231,232,233,234,240,245,254,273,282,283,284,287,289,292,323,327,332,333,335,336,342,345,347,350,351,354,356,357,392,412,413,426,427,431,436,473,494,495,497,515,516,519,520,],[20,-303,-102,-115,-113,-99,-97,-52,-95,-114,-96,-64,-60,-100,-91,-66,20,-94,-109,-104,-65,-93,-110,20,-215,-107,-111,20,-63,-116,20,-29,-105,-62,-101,-67,-112,-106,-303,-108,-303,-103,-117,-68,-98,-85,-10,-9,20,-53,20,-82,20,20,-61,-131,-301,-130,20,-147,-146,-160,-88,-90,20,-87,-89,-92,-81,-84,-86,-69,-30,20,20,-70,20,-83,20,20,-128,-140,-137,20,20,20,-161,20,20,-36,-35,20,20,-73,-76,-72,-74,20,-78,-193,-192,-77,-194,-75,20,20,-129,-132,-138,-302,-126,-127,-148,-71,20,-31,20,20,20,-34,20,20,20,-212,-211,20,-209,-195,-208,-196,-134,-133,-139,-150,-149,20,-33,-32,-207,-210,-199,-197,-198,-203,-202,-200,-204,-201,-206,-205,]),'UNION':([0,1,3,7,8,9,11,12,14,17,18,19,23,24,26,34,35,36,37,40,42,47,49,51,53,54,55,56,57,60,61,64,65,67,68,70,72,78,87,101,102,103,104,105,117,120,121,122,123,124,126,127,128,129,136,142,170,184,185,186,198,199,200,203,205,212,214,215,216,217,219,222,228,229,232,233,254,273,282,283,284,287,289,323,327,332,333,335,336,342,345,347,354,392,412,413,426,427,431,436,473,494,495,497,515,516,519,520,],[22,-303,-115,-97,-52,-95,-96,-64,-60,-66,22,-94,-65,-93,22,-63,-116,22,-29,-62,-67,-303,-303,-117,-68,-98,-85,-10,-9,22,-53,-82,22,22,-61,-301,22,-160,22,-81,-84,-86,-69,-30,22,-70,22,-83,22,22,-140,-137,22,22,-161,22,22,-36,-35,22,22,-73,-76,-72,-74,22,-78,-193,-192,-77,-194,-75,22,22,-138,-302,-71,22,-31,22,22,22,-34,22,22,-212,-211,22,-209,-195,-208,-196,-139,22,-33,-32,-207,-210,-199,-197,-198,-203,-202,-200,-204,-201,-206,-205,]),'COLON':([2,3,5,6,8,10,15,20,21,25,29,30,32,35,37,39,41,44,45,48,50,51,61,69,71,73,74,85,86,88,105,115,119,125,130,140,147,149,150,151,152,153,154,155,158,159,161,167,169,172,174,175,176,177,178,180,184,185,209,224,226,230,231,233,234,240,241,245,247,272,274,275,276,278,282,285,286,288,289,293,340,341,350,351,353,356,357,364,365,375,377,378,379,380,383,388,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,430,440,441,451,452,453,458,477,478,487,499,503,512,],[-102,-115,-113,-99,-52,-114,-100,-109,-104,-110,-215,-107,-111,-116,-29,-105,-101,-112,-106,-108,-103,-117,-53,-131,-130,-147,-146,-54,-157,-37,-30,-288,-156,-128,235,-55,-292,-251,-280,-295,-299,-296,-293,-278,-279,-253,-232,-291,-265,-297,-289,-277,-230,-294,-290,-216,-36,-35,338,-213,348,-129,-132,-302,-126,-127,355,-148,-38,-300,-257,-298,-274,-273,-31,-251,-256,-254,-34,-255,433,-229,-134,-133,235,-150,-149,-44,-43,-217,-272,-271,-270,-269,-268,-281,-238,-250,-239,-237,-241,-245,-240,-236,-243,-248,-234,-233,-242,-249,-244,-246,460,-247,-235,-33,-32,-214,-39,-42,-258,-266,-267,-252,-41,-40,-231,-282,-275,-276,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_statement':([121,212,221,338,348,433,472,474,476,509,514,518,],[199,199,199,199,199,199,199,199,199,199,199,199,]),'struct_or_union_specifier':([0,18,26,36,60,65,67,72,87,117,121,123,124,128,129,142,170,186,198,212,228,229,273,283,284,287,323,327,335,392,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'init_declarator_list':([33,63,],[82,82,]),'init_declarator_list_opt':([33,63,],[90,90,]),'iteration_statement':([121,212,221,338,348,433,472,474,476,509,514,518,],[200,200,200,200,200,200,200,200,200,200,200,200,]),'unified_string_literal':([106,121,144,145,156,163,166,170,171,182,183,195,204,211,212,221,235,246,249,267,273,280,281,284,287,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,326,335,337,338,339,344,348,349,355,362,363,370,372,389,416,429,433,454,456,460,463,464,470,472,474,475,476,480,493,501,506,509,514,518,],[158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,]),'assignment_expression_opt':([106,195,249,326,416,],[160,324,360,423,461,]),'brace_open':([27,28,66,69,71,73,74,121,143,144,145,212,221,338,348,372,389,433,451,456,457,472,474,476,480,509,514,518,],[72,75,121,123,124,131,132,121,121,256,256,121,121,121,121,256,459,121,459,459,459,121,121,121,256,121,121,121,]),'enumerator':([75,131,132,244,],[133,133,133,358,]),'typeid_noparen_declarator':([113,],[194,]),'type_qualifier_list_opt':([31,59,108,141,251,322,418,],[77,106,183,249,363,416,464,]),'declaration_specifiers_no_type_opt':([1,47,49,],[55,102,103,]),'expression_opt':([121,212,221,335,338,348,429,433,470,472,474,476,493,506,509,514,518,],[202,202,202,428,202,202,471,202,492,202,202,202,507,513,202,202,202,]),'designation':([256,447,459,502,],[366,366,366,366,]),'parameter_list':([60,142,186,323,327,392,],[116,116,116,116,116,116,]),'labeled_statement':([121,212,221,338,348,433,472,474,476,509,514,518,],[203,203,203,203,203,203,203,203,203,203,203,203,]),'abstract_declarator':([113,186,292,392,],[188,319,188,319,]),'translation_unit':([0,],[26,]),'init_declarator':([33,63,139,146,],[94,94,248,259,]),'direct_abstract_declarator':([113,186,189,292,315,391,392,],[196,196,321,196,321,321,196,]),'designator_list':([256,447,459,502,],[373,373,373,373,]),'identifier':([60,106,121,142,144,145,156,163,166,170,171,182,183,195,197,204,211,212,221,235,246,249,267,273,280,281,284,287,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,323,326,335,337,338,339,344,348,349,355,362,363,369,370,372,389,416,429,433,454,455,456,460,463,464,470,472,474,475,476,480,493,500,501,506,509,514,518,],[118,175,175,118,175,175,175,175,175,175,175,175,175,175,328,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,118,175,175,175,175,175,175,175,175,175,175,175,445,175,175,175,175,175,175,175,485,175,175,175,175,175,175,175,175,175,175,175,510,175,175,175,175,175,]),'offsetof_member_designator':([455,],[484,]),'unary_expression':([106,121,144,145,156,163,166,170,171,182,183,195,204,211,212,221,235,246,249,267,273,280,281,284,287,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,326,335,337,338,339,344,348,349,355,362,363,370,372,389,416,429,433,454,456,460,463,464,470,472,474,475,476,480,493,501,506,509,514,518,],[149,149,149,149,274,285,288,149,293,149,149,149,149,285,149,149,285,285,149,149,149,149,149,149,149,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,149,285,285,149,149,149,149,149,149,149,149,285,149,149,285,149,285,149,149,149,149,285,285,149,149,149,149,149,149,149,149,149,149,149,149,149,149,]),'abstract_declarator_opt':([113,292,],[187,390,]),'initializer':([144,145,372,480,],[255,258,448,498,]),'direct_id_declarator':([0,4,13,26,33,36,63,65,81,84,113,130,139,146,186,189,315,353,],[8,8,61,8,8,8,8,8,8,61,8,8,8,8,8,61,61,8,]),'struct_declaration_list':([72,123,124,],[129,228,229,]),'pp_directive':([0,26,],[12,12,]),'declaration_list':([18,87,],[67,67,]),'id_init_declarator':([36,65,],[95,95,]),'type_specifier':([0,18,26,36,60,65,67,72,87,117,121,123,124,128,129,142,170,186,198,212,228,229,273,283,284,287,323,327,335,392,],[16,16,16,96,16,96,16,125,16,96,16,125,125,230,125,16,125,16,16,16,125,125,125,125,125,125,16,16,16,16,]),'compound_statement':([66,121,143,212,221,338,348,433,472,474,476,509,514,518,],[120,205,254,205,205,205,205,205,205,205,205,205,205,205,]),'pointer':([0,4,26,33,36,63,65,77,81,113,130,139,146,186,292,353,392,],[13,13,13,84,13,84,13,137,84,189,84,84,84,315,391,84,391,]),'typeid_declarator':([33,63,81,130,139,146,353,],[86,86,138,86,86,86,86,]),'id_init_declarator_list':([36,65,],[98,98,]),'declarator':([33,63,130,139,146,353,],[89,89,241,89,89,241,]),'argument_expression_list':([281,],[384,]),'struct_declarator_list_opt':([130,],[238,]),'typedef_name':([0,18,26,36,60,65,67,72,87,117,121,123,124,128,129,142,170,186,198,212,228,229,273,283,284,287,323,327,335,392,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'parameter_type_list_opt':([186,327,392,],[318,425,318,]),'struct_declarator':([130,353,],[239,438,]),'type_qualifier':([0,1,18,26,31,33,47,49,59,60,63,67,72,76,87,107,108,113,121,123,124,128,129,130,141,142,170,186,198,212,228,229,250,251,273,283,284,287,292,322,323,327,335,392,417,418,],[47,47,47,47,78,91,47,47,78,47,91,47,78,136,47,136,78,91,47,78,78,136,78,240,78,47,78,47,47,47,78,78,136,78,78,78,78,78,240,78,47,47,47,47,136,78,]),'assignment_operator':([149,],[267,]),'expression':([121,170,204,212,221,273,280,284,287,310,335,338,339,344,348,349,429,433,470,472,474,475,476,493,501,506,509,514,518,],[208,290,334,208,208,290,381,290,290,409,208,208,432,434,208,437,208,208,208,208,208,496,208,208,511,208,208,208,208,]),'storage_class_specifier':([0,1,18,26,33,47,49,60,63,67,87,113,121,142,186,198,212,323,327,335,392,],[1,1,1,1,80,1,1,1,80,1,1,80,1,1,1,1,1,1,1,1,1,]),'unified_wstring_literal':([106,121,144,145,156,163,166,170,171,182,183,195,204,211,212,221,235,246,249,267,273,280,281,284,287,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,326,335,337,338,339,344,348,349,355,362,363,370,372,389,416,429,433,454,456,460,463,464,470,472,474,475,476,480,493,501,506,509,514,518,],[150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,]),'translation_unit_or_empty':([0,],[43,]),'initializer_list_opt':([256,],[367,]),'brace_close':([129,134,223,228,229,242,243,367,447,486,502,],[231,245,347,350,351,356,357,444,482,503,512,]),'direct_typeid_declarator':([33,63,81,84,130,139,146,353,],[85,85,85,140,85,85,85,85,]),'external_declaration':([0,26,],[14,68,]),'type_name':([170,273,283,284,287,],[291,376,385,386,387,]),'block_item_list':([121,],[212,]),'pppragma_directive':([0,26,121,212,221,338,348,433,472,474,476,509,514,518,],[23,23,214,214,214,214,214,214,214,214,214,214,214,214,]),'statement':([121,212,221,338,348,433,472,474,476,509,514,518,],[215,215,346,431,436,473,494,495,497,516,519,520,]),'cast_expression':([106,121,144,145,163,170,182,183,195,204,211,212,221,235,246,249,267,273,280,281,284,287,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,326,335,337,338,339,344,348,349,355,362,363,370,372,389,416,429,433,454,456,460,463,464,470,472,474,475,476,480,493,501,506,509,514,518,],[161,161,161,161,286,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,458,161,161,161,161,458,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,]),'struct_declarator_list':([130,],[236,]),'empty':([0,1,18,31,33,36,47,49,59,60,63,65,87,106,108,113,121,130,141,142,186,195,212,221,249,251,256,292,322,323,326,327,335,338,348,392,416,418,429,433,447,459,470,472,474,476,493,502,506,509,514,518,],[52,57,62,79,93,100,57,57,79,110,93,100,62,179,79,192,220,237,79,110,316,179,343,343,179,79,374,192,79,110,179,316,343,343,343,316,179,79,343,343,481,481,343,343,343,343,343,481,343,343,343,343,]),'parameter_declaration':([60,142,186,198,323,327,392,],[112,112,112,330,112,112,112,]),'primary_expression':([106,121,144,145,156,163,166,170,171,182,183,195,204,211,212,221,235,246,249,267,273,280,281,284,287,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,326,335,337,338,339,344,348,349,355,362,363,370,372,389,416,429,433,454,456,460,463,464,470,472,474,475,476,480,493,501,506,509,514,518,],[169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,]),'declaration':([0,18,26,67,87,121,212,335,],[34,64,34,122,64,216,216,429,]),'declaration_specifiers_no_type':([0,1,18,26,47,49,60,67,87,121,142,186,198,212,323,327,335,392,],[36,56,65,36,56,56,117,65,65,65,117,117,117,65,117,117,65,117,]),'jump_statement':([121,212,221,338,348,433,472,474,476,509,514,518,],[217,217,217,217,217,217,217,217,217,217,217,217,]),'enumerator_list':([75,131,132,],[134,242,243,]),'block_item':([121,212,],[219,342,]),'constant_expression':([211,235,246,355,370,],[340,352,359,439,446,]),'identifier_list_opt':([60,142,323,],[109,252,419,]),'constant':([106,121,144,145,156,163,166,170,171,182,183,195,204,211,212,221,235,246,249,267,273,280,281,284,287,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,326,335,337,338,339,344,348,349,355,362,363,370,372,389,416,429,433,454,456,460,463,464,470,472,474,475,476,480,493,501,506,509,514,518,],[155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,]),'type_specifier_no_typeid':([0,18,26,33,36,60,63,65,67,72,87,113,117,121,123,124,128,129,130,142,170,186,198,212,228,229,273,283,284,287,292,323,327,335,392,],[10,10,10,83,10,10,83,10,10,10,10,83,10,10,10,10,10,10,234,10,10,10,10,10,10,10,10,10,10,10,234,10,10,10,10,]),'struct_declaration':([72,123,124,129,228,229,],[127,127,127,232,232,232,]),'direct_typeid_noparen_declarator':([113,189,],[190,320,]),'id_declarator':([0,4,26,33,36,63,65,81,113,130,139,146,186,353,],[18,58,18,87,97,119,97,58,191,119,119,119,58,119,]),'selection_statement':([121,212,221,338,348,433,472,474,476,509,514,518,],[222,222,222,222,222,222,222,222,222,222,222,222,]),'postfix_expression':([106,121,144,145,156,163,166,170,171,182,183,195,204,211,212,221,235,246,249,267,273,280,281,284,287,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,326,335,337,338,339,344,348,349,355,362,363,370,372,389,416,429,433,454,456,460,463,464,470,472,474,475,476,480,493,501,506,509,514,518,],[159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,]),'initializer_list':([256,459,],[371,486,]),'unary_operator':([106,121,144,145,156,163,166,170,171,182,183,195,204,211,212,221,235,246,249,267,273,280,281,284,287,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,326,335,337,338,339,344,348,349,355,362,363,370,372,389,416,429,433,454,456,460,463,464,470,472,474,475,476,480,493,501,506,509,514,518,],[163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,]),'struct_or_union':([0,18,26,36,60,65,67,72,87,117,121,123,124,128,129,142,170,186,198,212,228,229,273,283,284,287,323,327,335,392,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'block_item_list_opt':([121,],[223,]),'assignment_expression':([106,121,144,145,170,182,183,195,204,212,221,249,267,273,280,281,284,287,310,326,335,337,338,339,344,348,349,362,363,372,416,429,433,454,463,464,470,472,474,475,476,480,493,501,506,509,514,518,],[165,224,257,257,224,313,314,165,224,224,224,165,375,224,224,382,224,224,224,165,224,430,224,224,224,224,224,442,443,257,165,224,224,483,490,491,224,224,224,224,224,257,224,224,224,224,224,224,]),'designation_opt':([256,447,459,502,],[372,480,372,480,]),'parameter_type_list':([60,142,186,323,327,392,],[111,253,317,420,317,317,]),'type_qualifier_list':([31,59,72,108,123,124,129,141,170,228,229,251,273,283,284,287,322,418,],[76,107,128,76,128,128,128,250,128,128,128,76,128,128,128,128,417,76,]),'designator':([256,373,447,459,502,],[368,449,368,368,368,]),'id_init_declarator_list_opt':([36,65,],[99,99,]),'declaration_specifiers':([0,18,26,60,67,87,121,142,186,198,212,323,327,335,392,],[33,63,33,113,63,63,63,113,113,113,63,113,113,63,113,]),'identifier_list':([60,142,323,],[114,114,114,]),'declaration_list_opt':([18,87,],[66,143,]),'function_definition':([0,26,],[40,40,]),'binary_expression':([106,121,144,145,170,182,183,195,204,211,212,221,235,246,249,267,273,280,281,284,287,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,326,335,337,338,339,344,348,349,355,362,363,370,372,416,429,433,454,460,463,464,470,472,474,475,476,480,493,501,506,509,514,518,],[176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,176,410,411,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,]),'enum_specifier':([0,18,26,36,60,65,67,72,87,117,121,123,124,128,129,142,170,186,198,212,228,229,273,283,284,287,323,327,335,392,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'decl_body':([0,18,26,67,87,121,212,335,],[46,46,46,46,46,46,46,46,]),'function_specifier':([0,1,18,26,33,47,49,60,63,67,87,113,121,142,186,198,212,323,327,335,392,],[49,49,49,49,92,49,49,49,92,49,49,92,49,49,49,49,49,49,49,49,49,]),'specifier_qualifier_list':([72,123,124,129,170,228,229,273,283,284,287,],[130,130,130,130,292,130,130,292,292,292,292,]),'conditional_expression':([106,121,144,145,170,182,183,195,204,211,212,221,235,246,249,267,273,280,281,284,287,310,326,335,337,338,339,344,348,349,355,362,363,370,372,416,429,433,454,460,463,464,470,472,474,475,476,480,493,501,506,509,514,518,],[180,180,180,180,180,180,180,180,180,341,180,180,341,341,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,341,180,180,341,180,180,180,180,180,487,180,180,180,180,180,180,180,180,180,180,180,180,180,180,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',42),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',42),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',42),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',42),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_specifiers_no_type_opt -> empty','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',42),
  ('declaration_specifiers_no_type_opt -> declaration_specifiers_no_type','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',43),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',42),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',42),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('id_init_declarator_list_opt -> empty','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',42),
  ('id_init_declarator_list_opt -> id_init_declarator_list','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',43),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',42),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',42),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',42),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',42),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',42),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',42),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('direct_id_declarator -> ID','direct_id_declarator',1,'p_direct_id_declarator_1','plyparser.py',109),
  ('direct_id_declarator -> LPAREN id_declarator RPAREN','direct_id_declarator',3,'p_direct_id_declarator_2','plyparser.py',109),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_3','plyparser.py',109),
  ('direct_id_declarator -> direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',109),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',110),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_5','plyparser.py',109),
  ('direct_id_declarator -> direct_id_declarator LPAREN parameter_type_list RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',109),
  ('direct_id_declarator -> direct_id_declarator LPAREN identifier_list_opt RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',110),
  ('direct_typeid_declarator -> TYPEID','direct_typeid_declarator',1,'p_direct_typeid_declarator_1','plyparser.py',109),
  ('direct_typeid_declarator -> LPAREN typeid_declarator RPAREN','direct_typeid_declarator',3,'p_direct_typeid_declarator_2','plyparser.py',109),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_3','plyparser.py',109),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',109),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',110),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_5','plyparser.py',109),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN parameter_type_list RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',109),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',110),
  ('direct_typeid_noparen_declarator -> TYPEID','direct_typeid_noparen_declarator',1,'p_direct_typeid_noparen_declarator_1','plyparser.py',109),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_3','plyparser.py',109),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',109),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',110),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_5','plyparser.py',109),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',109),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',110),
  ('id_declarator -> direct_id_declarator','id_declarator',1,'p_id_declarator_1','plyparser.py',109),
  ('id_declarator -> pointer direct_id_declarator','id_declarator',2,'p_id_declarator_2','plyparser.py',109),
  ('typeid_declarator -> direct_typeid_declarator','typeid_declarator',1,'p_typeid_declarator_1','plyparser.py',109),
  ('typeid_declarator -> pointer direct_typeid_declarator','typeid_declarator',2,'p_typeid_declarator_2','plyparser.py',109),
  ('typeid_noparen_declarator -> direct_typeid_noparen_declarator','typeid_noparen_declarator',1,'p_typeid_noparen_declarator_1','plyparser.py',109),
  ('typeid_noparen_declarator -> pointer direct_typeid_noparen_declarator','typeid_noparen_declarator',2,'p_typeid_noparen_declarator_2','plyparser.py',109),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',514),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',515),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',523),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',530),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',542),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',547),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',552),
  ('external_declaration -> pppragma_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',553),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',558),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',563),
  ('pppragma_directive -> PPPRAGMA','pppragma_directive',1,'p_pppragma_directive','c_parser.py',569),
  ('pppragma_directive -> PPPRAGMA PPPRAGMASTR','pppragma_directive',2,'p_pppragma_directive','c_parser.py',570),
  ('function_definition -> id_declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',581),
  ('function_definition -> declaration_specifiers id_declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',598),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',609),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',610),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',611),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',612),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',613),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',614),
  ('statement -> pppragma_directive','statement',1,'p_statement','c_parser.py',615),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',629),
  ('decl_body -> declaration_specifiers_no_type id_init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',630),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',689),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',698),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',699),
  ('declaration_specifiers_no_type -> type_qualifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_1','c_parser.py',709),
  ('declaration_specifiers_no_type -> storage_class_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_2','c_parser.py',714),
  ('declaration_specifiers_no_type -> function_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_3','c_parser.py',719),
  ('declaration_specifiers -> declaration_specifiers type_qualifier','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',725),
  ('declaration_specifiers -> declaration_specifiers storage_class_specifier','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',730),
  ('declaration_specifiers -> declaration_specifiers function_specifier','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',735),
  ('declaration_specifiers -> declaration_specifiers type_specifier_no_typeid','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',740),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','c_parser.py',745),
  ('declaration_specifiers -> declaration_specifiers_no_type type_specifier','declaration_specifiers',2,'p_declaration_specifiers_6','c_parser.py',750),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',756),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',757),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',758),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',759),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',760),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',765),
  ('type_specifier_no_typeid -> VOID','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',770),
  ('type_specifier_no_typeid -> _BOOL','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',771),
  ('type_specifier_no_typeid -> CHAR','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',772),
  ('type_specifier_no_typeid -> SHORT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',773),
  ('type_specifier_no_typeid -> INT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',774),
  ('type_specifier_no_typeid -> LONG','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',775),
  ('type_specifier_no_typeid -> FLOAT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',776),
  ('type_specifier_no_typeid -> DOUBLE','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',777),
  ('type_specifier_no_typeid -> _COMPLEX','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',778),
  ('type_specifier_no_typeid -> SIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',779),
  ('type_specifier_no_typeid -> UNSIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',780),
  ('type_specifier_no_typeid -> __INT128','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',781),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','c_parser.py',786),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','c_parser.py',787),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','c_parser.py',788),
  ('type_specifier -> type_specifier_no_typeid','type_specifier',1,'p_type_specifier','c_parser.py',789),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',794),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',795),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',796),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',801),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',802),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',810),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',811),
  ('id_init_declarator_list -> id_init_declarator','id_init_declarator_list',1,'p_id_init_declarator_list','c_parser.py',816),
  ('id_init_declarator_list -> id_init_declarator_list COMMA init_declarator','id_init_declarator_list',3,'p_id_init_declarator_list','c_parser.py',817),
  ('id_init_declarator -> id_declarator','id_init_declarator',1,'p_id_init_declarator','c_parser.py',822),
  ('id_init_declarator -> id_declarator EQUALS initializer','id_init_declarator',3,'p_id_init_declarator','c_parser.py',823),
  ('specifier_qualifier_list -> specifier_qualifier_list type_specifier_no_typeid','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',830),
  ('specifier_qualifier_list -> specifier_qualifier_list type_qualifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',835),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','c_parser.py',840),
  ('specifier_qualifier_list -> type_qualifier_list type_specifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','c_parser.py',845),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',854),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',855),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',864),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',873),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',874),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',883),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',884),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',891),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',892),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',900),
  ('struct_declaration -> SEMI','struct_declaration',1,'p_struct_declaration_2','c_parser.py',938),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',943),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',944),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',952),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',957),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',958),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',966),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',967),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',972),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',977),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',978),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',983),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',984),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',985),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',996),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',997),
  ('declarator -> id_declarator','declarator',1,'p_declarator','c_parser.py',1012),
  ('declarator -> typeid_declarator','declarator',1,'p_declarator','c_parser.py',1013),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',1124),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',1125),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1154),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1155),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1160),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1161),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1169),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1170),
  ('parameter_declaration -> declaration_specifiers id_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1189),
  ('parameter_declaration -> declaration_specifiers typeid_noparen_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1190),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1201),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1232),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1233),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1242),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1247),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1248),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1256),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1257),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1268),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1276),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1277),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1282),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1283),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1288),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1299),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1307),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1312),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1322),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1326),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1337),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1346),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1357),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1366),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1376),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1387),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1388),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1395),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1396),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1402),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1408),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1412),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1416),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1420),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1424),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1428),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1433),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1437),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1441),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1445),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1450),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1454),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1458),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1462),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1463),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1468),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1475),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1476),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1488),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1492),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1493),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1506),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1507),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1508),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1509),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1510),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1511),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1512),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1513),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1514),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1515),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1516),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1521),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1525),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1526),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1534),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1535),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1536),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1537),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1538),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1539),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1540),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1541),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1542),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1543),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1544),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1545),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1546),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1547),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1548),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1549),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1550),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1551),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1552),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1560),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1564),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1568),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1572),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1573),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1574),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1579),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1580),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1588),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1589),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1590),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1591),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1592),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1593),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1598),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1602),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1606),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1607),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1612),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1613),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1614),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1615),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1621),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1622),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1627),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1628),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1633),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1637),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1641),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1642),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1647),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1651),
  ('offsetof_member_designator -> identifier','offsetof_member_designator',1,'p_offsetof_member_designator','c_parser.py',1659),
  ('offsetof_member_designator -> offsetof_member_designator PERIOD identifier','offsetof_member_designator',3,'p_offsetof_member_designator','c_parser.py',1660),
  ('offsetof_member_designator -> offsetof_member_designator LBRACKET expression RBRACKET','offsetof_member_designator',4,'p_offsetof_member_designator','c_parser.py',1661),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1674),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1675),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1684),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1688),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1689),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1690),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1691),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1697),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1698),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1704),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1705),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1716),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1717),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1727),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1728),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1738),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1744),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1750),
]
